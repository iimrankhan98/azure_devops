## deployment.yml ##
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-course-finder-app
spec:
  replicas: 2
  selector:
    matchLabels:
      env: prod
    matchExpressions:
      - key: env
        operator: In
        values: 
          - prod
  template:
    metadata:
      name: ai-course-pod
      labels:
        env: prod
    spec:
      containers:
      - name: ai-course
        image: 650378210006.dkr.ecr.ap-south-1.amazonaws.com/ai-course-finder-prod:5845
        livenessProbe:
          httpGet:
            path: /docs
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /docs
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
## svc ##
apiVersion: v1
kind: Service
metadata:
  name: ai-course-finder
  labels:
    app: ai-course-finder
spec:
  selector:
    env: prod
  type: ClusterIP  # Change from NodePort to ClusterIP
  ports:  # Corrected the typo here
    - port: 8000  # Service port
      targetPort: 8000  # Target port on the backend pods

## ingress ##

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-course-finder-ingress
  annotations:
    alb.ingress.kubernetes.io/group.name: "alb-visionway-eks"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/healthcheck-path: /docs
    alb.ingress.kubernetes.io/target-type: ip

spec:
  ingressClassName: alb-ingress
  tls:
  - hosts:
      - ai.visionway-prod-api.com
  rules:
  - host: ai.visionway-prod-api.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-course-finder
            port:
              number: 8000
